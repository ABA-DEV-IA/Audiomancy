name: Build and Push Frontend Docker Image to Azure Container Registry

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Récupération du code
      - uses: actions/checkout@v4

      # Setup Node.js pour cacher les dépendances
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      # Cache npm pour accélérer le build
      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Installer les dépendances avant Docker pour profiter du cache
      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      # Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Connexion à Azure Container Registry
      - name: Log in to Azure Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          registry: ${{ secrets.AZURE_ACR_NAME }}.azurecr.io

      # Build et push de l'image Docker avec un tag basé sur la date/heure
      - name: Build and push Docker image
        run: |
          TAG=$(date +'%Y-%m-%d_%H-%M-%S')
          echo "Using tag: $TAG"

          docker build \
            --build-arg NODE_ENV=production \
            -f frontend/Dockerfile \
            -t ${{ secrets.AZURE_ACR_NAME }}.azurecr.io/audiomancy-front:$TAG \
            frontend/

          docker push ${{ secrets.AZURE_ACR_NAME }}.azurecr.io/audiomancy-front:$TAG
