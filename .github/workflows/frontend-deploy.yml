name: Build and Deploy Docker App to Azure Web App

on:
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Récupérer le code
      - uses: actions/checkout@v4

      # Se connecter à Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Build de l'image Docker
      - name: Build Docker image
        run: |
          docker build -t audiomancy-front:latest .

      # Se connecter au registre Azure Container Registry
      - name: Login to ACR
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login myregistry.azurecr.io -u ${{ secrets.ACR_USERNAME }} --password-stdin

      # Tag et push de l'image
      - name: Push Docker image
        run: |
          docker tag audiomancy-front:latest myregistry.azurecr.io/audiomancy-front:latest
          docker push myregistry.azurecr.io/audiomancy-front:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      # Se connecter à Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Déployer l'image sur Azure Web App (Docker)
      - name: Deploy to Azure Web App
        uses: azure/webapps-container-deploy@v2
        with:
          app-name: 'audiomancy'
          slot-name: 'Production'
          images: 'myregistry.azurecr.io/audiomancy-front:latest'
