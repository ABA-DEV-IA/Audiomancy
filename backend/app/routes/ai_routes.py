"""
API routes for AI-powered playlist generation.

This module defines the `/generate/playlist` endpoint, which:
- Receives a natural language prompt from the user.
- Uses the AI executor (`ai_executor`) to extract relevant music tags.
- Queries the Jamendo service (`get_tracks_for_reader`) to fetch tracks matching these tags.
- Returns a structured list of tracks (`GeneratedTrack`) as the response.

Raises:
    HTTPException (500): If the AI executor or Jamendo service fails during processing.
"""

from typing import List
from fastapi import APIRouter, HTTPException
from app.models.ai_models import PromptRequest, GeneratedTrack
from app.services.ai.ai_executor import ai_executor
from app.services.jamendo.jamendo_service import get_tracks_for_reader


router = APIRouter(prefix="/generate", tags=["Generate"])

@router.post("/playlist", response_model=List[GeneratedTrack])
def generate_playlist(prompt: PromptRequest):

    """
    Endpoint for generating a playlist based on a user prompt.
    
    Args:
        prompt (PromptRequest): The user's prompt for generating a playlist.
        
    Returns:
        List[GeneratedTrack]: A list of formatted tracks generated by the AI executor and Jamendo service.
        
    Raises:
        HTTPException: If an error occurs during the execution of the AI executor or Jamendo service.
    """
    try:
        tags = ai_executor(prompt.prompt)
        return get_tracks_for_reader(tags=tags, limit=prompt.limit)
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))
